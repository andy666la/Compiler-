const vmt_BBS
	:BBS.Start
	:BBS.Sort
	:BBS.Print
	:BBS.Init

func Main()
	t.0 = HeapAllocZ(12)
	[t.0] = :vmt_BBS
	if t.0 goto :null1
	Error("null pointer")
	null1:
	t.1 = [t.0]
	t.1 = [t.1+0]
	t.2 = call t.1(t.0 10)
	PrintIntS(t.2)
	ret

func BBS.Start(this sz)
	t.1 = [this]
	t.1 = [t.1+12]
	t.2 = call t.1(this sz)
	t.0 = t.2
	t.3 = [this]
	t.3 = [t.3+8]
	t.4 = call t.3(this)
	t.0 = t.4
	PrintIntS(99999)
	t.5 = [this]
	t.5 = [t.5+4]
	t.6 = call t.5(this)
	t.0 = t.6
	t.7 = [this]
	t.7 = [t.7+8]
	t.8 = call t.7(this)
	t.0 = t.8
	ret 0

func BBS.Sort(this)
	t.1 = [this+8]
	t.2 = Sub(t.1 1)
	t.0 = t.2
	t.4 = Sub(0 1)
	t.3 = t.4
	loop2_begin:
	t.5 = LtS(t.3 t.0)
	if0 t.5 goto :loop2_end
		t.6 = 1
		loop3_begin:
		t.7 = Add(t.0 1)
		t.8 = LtS(t.6 t.7)
		if0 t.8 goto :loop3_end
			t.10 = Sub(t.6 1)
			t.9 = t.10
			t.12 = [this+4]
			s = [t.12]
			i = t.9
			ok = LtS(i s)
			if ok goto :Visit4
			Error("array index out of bounds")
			Visit4: ok = LtS(-1 i)
			if ok goto :NewVisit4
			Error("array index out of bounds")
			NewVisit4: o = MulS(i 4)
			d = Add(t.12 o)
			t.13 = [d+4]
			t.11 = t.13
			t.15 = [this+4]
			s = [t.15]
			i = t.6
			ok = LtS(i s)
			if ok goto :Visit5
			Error("array index out of bounds")
			Visit5: ok = LtS(-1 i)
			if ok goto :NewVisit5
			Error("array index out of bounds")
			NewVisit5: o = MulS(i 4)
			d = Add(t.15 o)
			t.16 = [d+4]
			t.14 = t.16
			t.17 = LtS(t.14 t.11)
			if0 t.17 goto :if6_else
				t.19 = Sub(t.6 1)
				t.18 = t.19
				t.21 = [this+4]
				s = [t.21]
				i = t.18
				ok = LtS(i s)
				if ok goto :Visit7
				Error("array index out of bounds")
				Visit7: ok = LtS(-1 i)
				if ok goto :NewVisit7
				Error("array index out of bounds")
				NewVisit7: o = MulS(i 4)
				d = Add(t.21 o)
				t.22 = [d+4]
				t.20 = t.22
				t.23 = [this+4]
				t.24 = [this+4]
				s = [t.24]
				i = t.6
				ok = LtS(i s)
				if ok goto :Visit8
				Error("array index out of bounds")
				Visit8: ok = LtS(-1 i)
				if ok goto :NewVisit8
				Error("array index out of bounds")
				NewVisit8: o = MulS(i 4)
				d = Add(t.24 o)
				t.25 = [d+4]
				s = [t.23]
				i = t.18
				ok = LtS(i s)
				if ok goto :Visit9
				Error("array index out of bounds")
				Visit9: ok = LtS(-1 i)
				if ok goto :NewVisit9
				Error("array index out of bounds")
				NewVisit9: o = MulS(i 4)
				d = Add(t.23 o)
				[d+4] = t.25
				t.26 = [this+4]
				s = [t.26]
				i = t.6
				ok = LtS(i s)
				if ok goto :Visit10
				Error("array index out of bounds")
				Visit10: ok = LtS(-1 i)
				if ok goto :NewVisit10
				Error("array index out of bounds")
				NewVisit10: o = MulS(i 4)
				d = Add(t.26 o)
				[d+4] = t.20
				goto :if6_end
			if6_else:
				t.27 = 0
			if6_end:
			t.28 = Add(t.6 1)
			t.6 = t.28
			goto :loop3_begin
		loop3_end:
		t.29 = Sub(t.0 1)
		t.0 = t.29
		goto :loop2_begin
	loop2_end:
	ret 0

func BBS.Print(this)
	t.0 = 0
	loop11_begin:
	t.1 = [this+8]
	t.2 = LtS(t.0 t.1)
	if0 t.2 goto :loop11_end
		t.3 = [this+4]
		s = [t.3]
		i = t.0
		ok = LtS(i s)
		if ok goto :Visit12
		Error("array index out of bounds")
		Visit12: ok = LtS(-1 i)
		if ok goto :NewVisit12
		Error("array index out of bounds")
		NewVisit12: o = MulS(i 4)
		d = Add(t.3 o)
		t.4 = [d+4]
		PrintIntS(t.4)
		t.5 = Add(t.0 1)
		t.0 = t.5
		goto :loop11_begin
	loop11_end:
	ret 0

func BBS.Init(this sz)
	[this+8] = sz
	blen = MulS(sz 4)
	len = Add(blen 4)
	t.2 = HeapAllocZ(len)
	[t.2] = sz
	[this+4] = t.2
	t.3 = [this+4]
	s = [t.3]
	i = 0
	ok = LtS(i s)
	if ok goto :Visit13
	Error("array index out of bounds")
	Visit13: ok = LtS(-1 i)
	if ok goto :NewVisit13
	Error("array index out of bounds")
	NewVisit13: o = MulS(i 4)
	d = Add(t.3 o)
	[d+4] = 20
	t.4 = [this+4]
	s = [t.4]
	i = 1
	ok = LtS(i s)
	if ok goto :Visit14
	Error("array index out of bounds")
	Visit14: ok = LtS(-1 i)
	if ok goto :NewVisit14
	Error("array index out of bounds")
	NewVisit14: o = MulS(i 4)
	d = Add(t.4 o)
	[d+4] = 7
	t.5 = [this+4]
	s = [t.5]
	i = 2
	ok = LtS(i s)
	if ok goto :Visit15
	Error("array index out of bounds")
	Visit15: ok = LtS(-1 i)
	if ok goto :NewVisit15
	Error("array index out of bounds")
	NewVisit15: o = MulS(i 4)
	d = Add(t.5 o)
	[d+4] = 12
	t.6 = [this+4]
	s = [t.6]
	i = 3
	ok = LtS(i s)
	if ok goto :Visit16
	Error("array index out of bounds")
	Visit16: ok = LtS(-1 i)
	if ok goto :NewVisit16
	Error("array index out of bounds")
	NewVisit16: o = MulS(i 4)
	d = Add(t.6 o)
	[d+4] = 18
	t.7 = [this+4]
	s = [t.7]
	i = 4
	ok = LtS(i s)
	if ok goto :Visit17
	Error("array index out of bounds")
	Visit17: ok = LtS(-1 i)
	if ok goto :NewVisit17
	Error("array index out of bounds")
	NewVisit17: o = MulS(i 4)
	d = Add(t.7 o)
	[d+4] = 2
	t.8 = [this+4]
	s = [t.8]
	i = 5
	ok = LtS(i s)
	if ok goto :Visit18
	Error("array index out of bounds")
	Visit18: ok = LtS(-1 i)
	if ok goto :NewVisit18
	Error("array index out of bounds")
	NewVisit18: o = MulS(i 4)
	d = Add(t.8 o)
	[d+4] = 11
	t.9 = [this+4]
	s = [t.9]
	i = 6
	ok = LtS(i s)
	if ok goto :Visit19
	Error("array index out of bounds")
	Visit19: ok = LtS(-1 i)
	if ok goto :NewVisit19
	Error("array index out of bounds")
	NewVisit19: o = MulS(i 4)
	d = Add(t.9 o)
	[d+4] = 6
	t.10 = [this+4]
	s = [t.10]
	i = 7
	ok = LtS(i s)
	if ok goto :Visit20
	Error("array index out of bounds")
	Visit20: ok = LtS(-1 i)
	if ok goto :NewVisit20
	Error("array index out of bounds")
	NewVisit20: o = MulS(i 4)
	d = Add(t.10 o)
	[d+4] = 9
	t.11 = [this+4]
	s = [t.11]
	i = 8
	ok = LtS(i s)
	if ok goto :Visit21
	Error("array index out of bounds")
	Visit21: ok = LtS(-1 i)
	if ok goto :NewVisit21
	Error("array index out of bounds")
	NewVisit21: o = MulS(i 4)
	d = Add(t.11 o)
	[d+4] = 19
	t.12 = [this+4]
	s = [t.12]
	i = 9
	ok = LtS(i s)
	if ok goto :Visit22
	Error("array index out of bounds")
	Visit22: ok = LtS(-1 i)
	if ok goto :NewVisit22
	Error("array index out of bounds")
	NewVisit22: o = MulS(i 4)
	d = Add(t.12 o)
	[d+4] = 5
	ret 0

